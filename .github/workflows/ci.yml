# badge: https://github.com/borgbackup/borg/workflows/CI/badge.svg?branch=master

name: CI

on:
  push:
    branches: [ master ]
    paths:
    - '**.py'
    - '**.pyx'
    - '**.c'
    - '**.h'
    - '**.yml'
    - '**.cfg'
    - '**.ini'
    - 'requirements.d/*'
    - '!docs/**'
  pull_request:
    branches: [ master ]
    paths:
    - '**.py'
    - '**.pyx'
    - '**.c'
    - '**.h'
    - '**.yml'
    - '**.cfg'
    - '**.ini'
    - 'requirements.d/*'
    - '!docs/**'

jobs:
  pytest:

    strategy:
      matrix:
        include:
            - os: macos-latest
              python-version: '3.8'
              toxenv: py38-fuse2

    env:
      # Configure pkg-config to use OpenSSL from Homebrew
      PKG_CONFIG_PATH: /usr/local/opt/openssl@1.1/lib/pkgconfig
      TOXENV: ${{ matrix.toxenv }}

    runs-on: ${{ matrix.os }}
    timeout-minutes: 40

    steps:
    - uses: actions/checkout@v2
      with:
        # just fetching 1 commit is not enough for setuptools-scm, so we fetch all
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.d/development.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

    - name: Install macOS packages
      if: ${{ runner.os == 'macOS' }}
      run: |
        brew install pkg-config || brew upgrade pkg-config
        #brew install zstd || brew upgrade zstd
        #brew install lz4 || brew upgrade lz4
        #brew install openssl@1.1 || brew upgrade openssl@1.1
        brew install --cask macfuse || brew upgrade --cask macfuse  # Required for Python llfuse module

    - name: Install Python requirements
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.d/development.txt
    - name: Install borgbackup
      run: |
        # pip install -e .
        python setup.py -v develop
    - name: run pytest via tox
      run: |
        # do not use fakeroot, but run as root. avoids the dreaded EISDIR sporadic failures. see #2482.
        #sudo -E bash -c "tox -e py"
        #tox --skip-missing-interpreters
        pip install llfuse
        echo "AllFiles vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv"
        sudo sqlite3 /Library/Application\ Support/com.apple.TCC/TCC.db 'select * from access' | grep AllFiles
        # kTCCServiceSystemPolicyAllFiles|/bin/bash|1|2|0|1||||UNUSED||0|1583997993
        sudo pytest -vk test_fuse
