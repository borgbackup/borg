have_clmul: int

def crc32(data: bytes, value: int = 0) -> int: ...
def crc32_clmul(data: bytes, value: int = 0) -> int: ...
def crc32_slice_by_8(data: bytes, value: int = 0) -> int: ...

def xxh64(data: bytes, seed: int = 0) -> bytes: ...

class StreamingXXH64:
    def __init__(self, seed: int = 0) -> None: ...
    def update(self, data: bytes) -> None: ...
    def digest(self) -> bytes: ...
    def hexdigest(self) -> str: ...
